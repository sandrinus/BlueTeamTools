# Create Directories

# Basic Directories

- name: Create installers Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\installers"
    state: directory

- name: Copy Wireshark Installer
  win_copy:
    src: "{{ scripts_ansible_location }}/wsinstall.exe"
    dest: "{{ scripts_path }}\\installers\\wsinstall.exe"

- name: Create tools Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\tools"
    state: directory

- name: Create zipped Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\zipped"
    state: directory

# Directories inside scripts directory

- name: Create conf Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\scripts\\conf"
    state: directory

- name: Create results Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\scripts\\results"
    state: directory

- name: Create artifacts Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\scripts\\results\\artifacts"
    state: directory

# Directories inside tools directory

- name: Create sysinternals Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\tools\\sys"
    state: directory

- name: Create yara Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\tools\\yara"
    state: directory

- name: Create antipwny Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\tools\\antipwny"
    state: directory

# Copy over scripts

- name: Copy Audit Script
  win_copy:
    src: "{{ scripts_ansible_location }}/audit.ps1"
    dest: "{{ scripts_path }}\\scripts\\audit.ps1"
    remote_src: false

- name: Copy Command runbook
  win_copy:
    src: "{{ scripts_ansible_location }}/command_runbook.txt"
    dest: "{{ scripts_path }}\\scripts\\command_runbook.txt"
    remote_src: false

- name: Copy Injected thread Script
  win_copy:
    src: "{{ scripts_ansible_location }}/Get-InjectedThread.ps1"
    dest: "{{ scripts_path }}\\scripts\\Get-InjectedThread.ps1"
    remote_src: false

- name: Copy Inventory Script
  win_copy:
    src: "{{ scripts_ansible_location }}/inventory.ps1"
    dest: "{{ scripts_path }}\\scripts\\inventory.ps1"
    remote_src: false

- name: Copy Logging Script
  win_copy:
    src: "{{ scripts_ansible_location }}/logging.ps1"
    dest: "{{ scripts_path }}\\scripts\\logging.ps1"
    remote_src: false

- name: Copy PrivescCheck Script
  win_copy:
    src: "{{ scripts_ansible_location }}/PrivescCheck.ps1"
    dest: "{{ scripts_path }}\\scripts\\PrivescCheck.ps1"
    remote_src: false

- name: Copy Secure Script
  win_copy:
    src: "{{ scripts_ansible_location }}/secure.ps1"
    dest: "{{ scripts_path }}\\scripts\\secure.ps1"
    remote_src: false

- name: Copy Soar Agent Script
  win_copy:
    src: "{{ scripts_ansible_location }}/soaragent.ps1"
    dest: "{{ scripts_path }}\\scripts\\soaragent.ps1"
    remote_src: false

- name: Copy User Management Script
  win_copy:
    src: "{{ scripts_ansible_location }}/usermgmt.ps1"
    dest: "{{ scripts_path }}\\scripts\\usermgmt.ps1"
    remote_src: false

- name: Copy Yara Script
  win_copy:
    src: "{{ scripts_ansible_location }}/yara.bat"
    dest: "{{ scripts_path }}\\scripts\\yara.bat"
    remote_src: false

# DC Tools

# Group Policies
- name: Copy Group Policies to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/{EE3B9E95-9783-474A-86A5-907E93E64F57}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf\\{EE3B9E95-9783-474A-86A5-907E93E64F57}.zip"
  when: server_type == "dc"

- name: Copy Group Policies to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/{40E1EAFA-8121-4FFA-B6FE-BC348636AB83}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf\\{40E1EAFA-8121-4FFA-B6FE-BC348636AB83}.zip"
  when: server_type == "dc"

- name: Copy Group Policies to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/{6136C3E1-B316-4C46-9B8B-8C1FC373F73C}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf\\{6136C3E1-B316-4C46-9B8B-8C1FC373F73C}.zip"
  when: server_type == "dc"

- name: Copy Group Policies to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/{BEAA6460-782B-4351-B17D-4DC8076633C9}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf\\{BEAA6460-782B-4351-B17D-4DC8076633C9}.zip"
  when: server_type == "dc"

# Reset krbtgt script

- name: Copy krbtgt reset script to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/Reset-KrbtgtKeyInteractive.ps1"
    dest: "{{ scripts_path }}\\scripts\\Reset-KrbtgtKeyInteractive.ps1"
  when: server_type == "dc"

# Pingcastle and Adalanche

- name: Copy Pingcastle to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/pc.zip"
    dest: "{{ scripts_path }}\\pc.zip"
  when: server_type == "dc"

- name: Copy Adalanche to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/adalanche.exe"
    dest: "{{ scripts_path }}\\tools\\adalanche.exe"
  when: server_type == "dc"

# Extract Pingcastle and Adalanche

- name: Unzip Pingcastle on Domain Controller
  community.windows.win_unzip:
     src: "{{ scripts_path }}\\pc.zip" 
     dest: "{{ scripts_path }}\\tools\\pc"
  when: server_type == "dc"

- name: Unzip Group Policy Object 1 on Domain Controller
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\scripts\\conf\\{EE3B9E95-9783-474A-86A5-907E93E64F57}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf"
  when: server_type == "dc"

- name: Unzip Group Policy Object 2 on Domain Controller
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\scripts\\conf\\{40E1EAFA-8121-4FFA-B6FE-BC348636AB83}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf"
  when: server_type == "dc"

- name: Unzip Group Policy Object 3 on Domain Controller
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\scripts\\conf\\{6136C3E1-B316-4C46-9B8B-8C1FC373F73C}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf"
  when: server_type == "dc"

- name: Unzip Group Policy Object 4 on Domain Controller
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\scripts\\conf\\{BEAA6460-782B-4351-B17D-4DC8076633C9}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf"
  when: server_type == "dc"

# Local Policy/Client tools

- name: Copy Local GP Policy File to Non DC's
  win_copy:
    src: "{{ scripts_ansible_location }}/localpolicy.PolicyRules"
    dest: "{{ scripts_path }}\\scripts\\conf\\localpolicy.PolicyRules"
  when: server_type != "dc"

- name: Copy LGPO tool to Non DC's
  win_copy:
    src: "{{ scripts_ansible_location }}/lg.zip"
    dest: "{{ scripts_path }}\\lg.zip"
  when: server_type != "dc"

- name: Unzip LGPO tool on Non DC's
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\lg.zip"
    dest: "{{ scripts_path }}\\tools"
  when: server_type != "dc"

# Server Core tools

- name: Copy Explorer++ to Server Core Machines
  win_copy:
    src: "{{ scripts_ansible_location }}/epp.zip"
    dest: "{{ scripts_path }}\\epp.zip"
  when: is_server_core == "true"

- name: Extract Explorer++ on Server Core Machines
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\epp.zip"
    dest: "{{ scripts_path }}\\tools"
  when: is_server_core == "true"


  # Third Party tools

- name: Copy Chainsaw
  win_copy:
    src: "{{ scripts_ansible_location }}/cs.zip"
    dest: "{{ scripts_path }}\\cs.zip"

- name: Copy Chainsaw Dependency Library
  win_copy:
    src: "{{ scripts_ansible_location }}/vc_redist.64.exe"
    dest: "{{ scripts_path }}\\installers\\vc_redist.64.exe"

- name: Silently Installing Chainsaw Dependency Library
  win_shell: |
    .\vc_redist.64.exe /install /passive /norestart
  args:
    chdir: "{{ scripts_path }}\\installers"

- name: Copy Hollows Hunter
  win_copy:
    src: "{{ scripts_ansible_location }}/hh64.zip"
    dest: "{{ scripts_path }}\\hh64.zip"

- name: Copy Sysmon Conf file
  win_copy:
    src: "{{ scripts_ansible_location }}/sysmon.xml"
    dest: "{{ scripts_path }}\\scripts\\conf\\sysmon.xml"

- name: Copy WFC installer
  win_copy:
    src: "{{ scripts_ansible_location }}/wfcsetup.exe"
    dest: "{{ scripts_path }}\\installers\\wfcsetup.exe"

- name: Copy .net 4.8
  win_copy:
    src: "{{ scripts_ansible_location }}/net_installer.exe"
    dest: "{{ scripts_path }}\\installers\\net_installer.exe"

- name: Silently Install .net 4.8
  win_shell: |
    .\net_installer.exe /passive /norestart
  args:
    chdir: "{{ scripts_path }}\\installers"

- name: Copy Wireshark Installer
  win_copy:
    src: "{{ scripts_ansible_location }}/wsinstall.exe"
    dest: "{{ scripts_path }}\\installers\\wsinstall.exe"

# Sysinternals

- name: Copy Autoruns
  win_copy:
    src: "{{ scripts_ansible_location }}/ar.zip"
    dest: "{{ scripts_path }}\\ar.zip"

- name: Copy DLL Check
  win_copy:
    src: "{{ scripts_ansible_location }}/dll.zip"
    dest: "{{ scripts_path }}\\dll.zip"

- name: Copy Process Explorer
  win_copy:
    src: "{{ scripts_ansible_location }}/pe.zip"
    dest: "{{ scripts_path }}\\pe.zip"

- name: Copy Process Monitor
  win_copy:
    src: "{{ scripts_ansible_location }}/pm.zip"
    dest: "{{ scripts_path }}\\pm.zip"

- name: Copy Sig Check
  win_copy:
    src: "{{ scripts_ansible_location }}/sc.zip"
    dest: "{{ scripts_path }}\\sc.zip"

- name: Copy TCP View
  win_copy:
    src: "{{ scripts_ansible_location }}/tv.zip"
    dest: "{{ scripts_path }}\\tv.zip"

- name: Copy Streams
  win_copy:
    src: "{{ scripts_ansible_location }}/stm.zip"
    dest: "{{ scripts_path }}\\stm.zip"

- name: Copy Sysmon
  win_copy:
    src: "{{ scripts_ansible_location }}/sm.zip"
    dest: "{{ scripts_path }}\\sm.zip"

- name: Copy Access Check
  win_copy:
    src: "{{ scripts_ansible_location }}/ac.zip"
    dest: "{{ scripts_path }}\\ac.zip"

- name: Copy Strings
  win_copy:
    src: "{{ scripts_ansible_location }}/str.zip"
    dest: "{{ scripts_path }}\\str.zip"

# Yara and Yara Rules

- name: Copy Yara
  win_copy:
    src: "{{ scripts_ansible_location }}/yara.zip"
    dest: "{{ scripts_path }}\\yara.zip"

- name: Copy Windows Yara Rules
  win_copy:
    src: "{{ scripts_ansible_location }}/Windows.zip"
    dest: "{{ scripts_path }}\\Windows.zip"

- name: Copy Multi Yara Rules
  win_copy:
    src: "{{ scripts_ansible_location }}/Multi.zip"
    dest: "{{ scripts_path }}\\Multi.zip"

# Other tools

- name: Copy Notepad++
  win_copy:
    src: "{{ scripts_ansible_location }}/notepadpp_installer.exe"
    dest: "{{ scripts_path }}\\installers\\notepadpp_installer.exe"

- name: Silently Install Notepad++
  win_shell: |
    .\notepadpp_installer.exe /S
  args:
    chdir: "{{ scripts_path }}\\installers"

- name: Copy Google Chrome
  win_copy:
    src: "{{ scripts_ansible_location }}/chromeinstall.exe"
    dest: "{{ scripts_path }}\\installers\\chromeinstall.exe"

- name: Silently Install Chrome
  win_shell: |
    .\chromeinstall.exe /silent /install
  args:
    chdir: "{{ scripts_path }}\\installers"

- name: Copy Floss
  win_copy:
    src: "{{ scripts_ansible_location }}/floss.zip"
    dest: "{{ scripts_path }}\\floss.zip"

- name: Copy Antipwny
  win_copy:
    src: "{{ scripts_ansible_location }}/AntiPwny.exe"
    dest: "{{ scripts_path }}\\tools\\Antipwny"

- name: Copy Antipwny DLL
  win_copy:
    src: "{{ scripts_ansible_location }}/ObjectListView.dll"
    dest: "{{ scripts_path }}\\tools\\Antipwny"

# Extracting tools

- name: Extract Autoruns
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\ar.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\ar"

- name: Extract List DLLs
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\dll.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\dll"

- name: Extract Process Explorer
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\pe.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\pe"

- name: Extract Process Monitor
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\pm.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\pm"

- name: Extract Sig Check
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\sc.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\sc"

- name: Extract TCP View
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\tv.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\tv"

- name: Extract Streams
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\stm.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\stm"

- name: Extract Sysmon
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\sm.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\sm"

- name: Extract Access Check
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\ac.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\ac"

- name: Extract Strings
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\str.zip"
    dest: "{{ scripts_path }}\\tools\\sys\\str"

- name: Extract Floss
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\floss.zip"
    dest: "{{ scripts_path }}\\tools"

- name: Extract Hollows Hunter
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\hh64.zip"
    dest: "{{ scripts_path }}\\tools"

- name: Extract Chainsaw
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\cs.zip"
    dest: "{{ scripts_path }}\\tools"

- name: Extract Yara
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\yara.zip"
    dest: "{{ scripts_path }}\\tools\\yara"

- name: Extract Windows Yara Rules
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\Windows.zip"
    dest: "{{ scripts_path }}\\tools\\yara"

- name: Extract Multi Yara Rules
  community.windows.win_unzip:
    src: "{{ scripts_path }}\\Multi.zip"
    dest: "{{ scripts_path }}\\tools\\yara"

# Clean up Zipped files

- name: Find all zipped files
  ansible.windows.win_find:
    paths: "{{ scripts_path }}"
    patterns: ['*.zip']
  register: found_files

- name: Copy each zipped files from base folder to zipped folder
  ansible.windows.win_copy:
    src: "{{ item.path }}"
    dest: "{{ scripts_path }}\\zipped\\{{ item.filename }}"
    remote_src: true
  loop: "{{ found_files.files }}"
  no_log: true

- name: Remove zipped folders from base folder
  ansible.windows.win_file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ found_files.files }}"
  no_log: true